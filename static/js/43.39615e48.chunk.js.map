{"version":3,"file":"static/js/43.39615e48.chunk.js","mappings":"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","sources":["Navbar.tsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","TeacherHomepage.tsx"],"sourcesContent":["import React from 'react';\nimport {Button, Container, Navbar as BootstrapNavbar} from \"react-bootstrap\";\nimport GoogleLogin, {\n    GoogleLoginResponse,\n    GoogleLoginResponseOffline,\n    GoogleLogout\n} from \"react-google-login\";\nimport jwtDecode from \"jwt-decode\";\nimport \"./Navbar.css\";\n\ninterface UserProfile {\n    token: string,\n    pfpURL: string\n}\n\nexport default class Navbar extends React.Component<any, { profile: UserProfile | null }> {\n    constructor(props: any) {\n        super(props);\n        this.state = { profile: null };\n    }\n\n    render() {\n        return (\n            <BootstrapNavbar sticky=\"top\" className=\"Navbar\">\n                <Container>\n                    <BootstrapNavbar.Brand href=\"/\">MediaPedia</BootstrapNavbar.Brand>\n                    <BootstrapNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <LoginButton\n                        signedIn={ this.state.profile !== null }\n                        pfpURL={ this.state.profile?.pfpURL ?? null }\n                        onSuccess={ response => {\n                            console.log(response);\n                            if (\"tokenId\" in response && \"profileObj\" in response) {\n                                this.setState({\n                                    profile: {\n                                        token: response.tokenId,\n                                        pfpURL: response.profileObj.imageUrl\n                                    }\n                                })\n                            }\n                        }}\n                        onLoginFailure={ response => {\n                            console.log(response);\n                        }}\n                        onLogoutSuccess= { () => {\n                            this.setState({\n                                profile: null\n                            })\n                        }}\n                    />\n                </Container>\n            </BootstrapNavbar>\n        );\n    }\n\n    componentDidMount() {\n        const loginToken = localStorage.getItem(\"loginToken\");\n        if (loginToken !== null) {\n            new Promise<{ token: string, pfpURL: string }>((resolve, reject) => {\n                const decodedJWT: any = jwtDecode(loginToken)\n                if (\"picture\" in decodedJWT) {\n                    console.log(decodedJWT);\n                    resolve({\n                        token: loginToken,\n                        pfpURL: decodedJWT.picture\n                    })\n                } else {\n                    reject()\n                }\n            })\n                .then(profile => {\n                    this.setState({\n                        profile: profile\n                    })\n                })\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<{ profile: { token: string; pfpURL: string } | null }>, snapshot?: any) {\n        if (prevState.profile?.token !== this.state.profile?.token) {\n            if (this.state.profile === null) {\n                localStorage.removeItem(\"loginToken\")\n            } else {\n                localStorage.setItem(\"loginToken\", this.state.profile.token)\n            }\n        }\n    }\n}\n\nfunction LoginButton(props: {\n    signedIn: boolean,\n    pfpURL: string | null\n    readonly onSuccess?: (response: GoogleLoginResponse | GoogleLoginResponseOffline) => void,\n    readonly onLoginFailure?: (error: any) => void,\n    readonly onLogoutSuccess?: () => void;\n    readonly onLogoutFailure?: () => void;\n}): JSX.Element {\n    if (props.signedIn) {\n        console.log(props.pfpURL);\n        return <div>\n            {\n                props.pfpURL !== null ?\n                    (<img src={props.pfpURL} alt=\"Profile\" className=\"pfp\"/>)\n                    : null\n            }\n            <GoogleLogout\n                clientId=\"1037281959356-1lomvo3e69p8j305qge2hfjrshk90vvh.apps.googleusercontent.com\"\n                onLogoutSuccess={props.onLogoutSuccess}\n                onFailure={props.onLogoutFailure}\n                render={props =>\n                    <Button variant=\"outline-primary\" onClick={props.onClick} disabled={props.disabled}>Log Out</Button>\n                }\n            />\n        </div>\n    } else {\n        return (\n            <GoogleLogin\n                clientId=\"1037281959356-1lomvo3e69p8j305qge2hfjrshk90vvh.apps.googleusercontent.com\"\n                onSuccess={props.onSuccess}\n                onFailure={props.onLogoutFailure}\n                render={props =>\n                    <Button variant=\"outline-primary\" onClick={props.onClick} disabled={props.disabled}>Sign In</Button>\n                }\n                isSignedIn={true}\n            />\n        );\n    }\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from 'react';\nimport {Button, Card, Col, Container, Row as BootstrapRow} from \"react-bootstrap\";\nimport Navbar from \"./Navbar\";\nimport \"./TeacherHomepage.css\"\n\ninterface LessonCardData {\n    name: string\n    description: string\n    url: string\n    progress: number\n}\n\ninterface TeacherHomepageProps {\n    cards: LessonCardData[]\n}\n\nexport default class TeacherHomepage extends React.Component<TeacherHomepageProps, any> {\n    constructor(props: TeacherHomepageProps ) {\n        super(props);\n        this.state = { profile: null };\n    }\n\n    render() {\n        return (<div className=\"TeacherHomepage\">\n            <Navbar/>\n            <Container>\n                <h1>Unplayed</h1>\n                <Row cards={ this.props.cards.filter((data) => data.progress <= 0.999) } />\n                <h1>Completed</h1>\n                <Row cards={ this.props.cards.filter((data) => data.progress > 0.999) } />\n            </Container>\n        </div>);\n    }\n}\n\nfunction Row(props: {cards: LessonCardData[] }): JSX.Element {\n    return (\n        <BootstrapRow className=\"gy-3\">\n            {\n                props.cards\n                    .map(LessonCard)\n                    .map(card =>\n                        <Col xs={12} md={6} lg={4} xl={3}>{card}</Col>\n                    )\n            }\n        </BootstrapRow>\n    );\n}\n\nfunction LessonCard(cardData: LessonCardData): JSX.Element {\n    return <Card className=\"LessonCard h-100\">\n        <Card.Body className=\"d-flex flex-column\">\n            <Card.Title>{cardData.name}</Card.Title>\n            <Card.Text>{cardData.description}</Card.Text>\n            <Button variant=\"primary\" href={cardData.url} className=\"mt-auto align-self-start\">{cardData.progress > 0.005 ? \"Continue\" : \"Start\"}</Button>\n        </Card.Body>\n        <div className=\"TeacherHomepage-card-progress\" style={{width: `${cardData.progress*100}%`}}/>\n    </Card>\n}\n"],"names":["Navbar","props","state","profile","sticky","className","Container","href","LoginButton","signedIn","this","pfpURL","onSuccess","response","console","log","setState","token","tokenId","profileObj","imageUrl","onLoginFailure","onLogoutSuccess","loginToken","localStorage","getItem","Promise","resolve","reject","decodedJWT","jwtDecode","picture","then","prevProps","prevState","snapshot","removeItem","setItem","React","src","alt","GoogleLogout","clientId","onFailure","onLogoutFailure","render","Button","variant","onClick","disabled","isSignedIn","CardImg","ref","bsPrefix","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","TeacherHomepage","cards","filter","data","progress","Row","map","LessonCard","card","Col","xs","md","lg","xl","cardData","name","description","url","style","width"],"sourceRoot":""}